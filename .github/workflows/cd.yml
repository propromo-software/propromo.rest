# Continuous Deployment - Rest Backend Service
on: ["push", "pull_request"]

jobs:
  cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.web
          push: true
          tags: |
            propromo/rest-microservice:latest
            ghcr.io/${{ github.repository_owner }}/propromo-rest-microservice:latest

      - name: Get latest release tag
        id: get_latest_tag
        run: |
          if git for-each-ref --sort=-v:refname --format='%(refname:short)' refs/tags | grep -q '^[0-9]\+\.[0-9]\+\.[0-9]\+-[9]\+\.[0-9]\+$'; then
            LATEST_TAG=$(git describe --tags --abbrev=0)
            echo "latest_tag=${LATEST_TAG}" >> $GITHUB_ENV
          else
            TAG=$(date +"%Y.%m.%d.1")
            echo "latest_tag=${TAG}" >> $GITHUB_ENV
          fi

      # https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands
      - name: Generate release tag
        id: generate_release_tag
        run: |
          if [[ -z "${latest_tag}" ]]; then
            TAG=$(date +"%Y.%m.%d.1")
          else
            IFS='.' read -r YYYY MM DD I <<< "${latest_tag%.*}"
            TAG="${YYYY}.${MM}.${DD}.$((I+1))"
          fi
          echo "next_release_tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.generate_release_tag.outputs.next_release_tag }}
          name: Release ${{ steps.generate_release_tag.outputs.next_release_tag }}
          generateReleaseNotes: true
          draft: false
          prerelease: true
          makeLatest: true
#
# HEROKU DEPLOYMENT
#      - name: Build, Push and Deploy to Heroku
#        id: heroku
#        uses: jctaveras/heroku-deploy@v3.1.0
#        with:
#          email: ${{ secrets.HEROKU_EMAIL }}
#          api_key: ${{ secrets.HEROKU_API_KEY }}
#          app_name: ${{ secrets.HEROKU_APP_NAME }}
#          dockerfile_path: '.'
#          process_type: 'web'
#
